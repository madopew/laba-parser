translation_unit
/ external_declaration translation_unit_ext

translation_unit_ext
/ external_declaration translation_unit_ext
/ 1


external_declaration
/ function_definition
/ declaration


function_definition
/ declaration_specifiers declarator compound_statement


declaration_specifiers
/ type_specifier declaration_specifiers
/ type_specifier
/ CONST declaration_specifiers
/ CONST


type_specifier
/ VOID
/ CHAR
/ SHORT
/ INT
/ LONG
/ FLOAT
/ DOUBLE
/ SIGNED
/ UNSIGNED


declarator
/ pointer direct_declarator
/ direct_declarator


pointer
/ MUL_CHAR pointer
/ MUL_CHAR


direct_declarator
/ direct_declarator_others direct_declarator_ext

direct_declarator_ext
/ direct_declarator_operators direct_declarator_ext
/ 1

direct_declarator_operators
/ OPEN_SQUARE CLOSE_SQUARE
/ OPEN_SQUARE constant_expression CLOSE_SQUARE
/ OPEN_BRACKET parameter_list CLOSE_BRACKET
/ OPEN_BRACKET CLOSE_BRACKET
/ OPEN_BRACKET identifier_list CLOSE_BRACKET

direct_declarator_others
/ OPEN_BRACKET declarator CLOSE_BRACKET
/ IDENTIFIER

assignment_expression
/ logical_or_expression assignment_expression_ext

assignment_expression_ext
/ assignment_operator unary_expression
/ 1

logical_or_expression
/ logical_and_expression logical_or_expression_ext

logical_or_expression_ext
/ OR_OP logical_or_expression
/ 1

logical_and_expression
/ inclusive_or_expression logical_and_expression_ext

logical_and_expression_ext
/ AND_OP logical_and_expression
/ 1

inclusive_or_expression
/ exclusive_or_expression inclusive_or_expression_ext

inclusive_or_expression_ext
/ OR_CHAR inclusive_or_expression
/ 1

exclusive_or_expression
/ and_expression exclusive_or_expression_ext

exclusive_or_expression_ext
/ XOR_CHAR exclusive_or_expression
/ 1

and_expression
/ equality_expression and_expression_ext

and_expression_ext
/ AND_CHAR and_expression
/ 1

equality_expression
/ relational_expression equality_expression_ext

equality_expression_ext
/ NE_OP equality_expression
/ EQ_OP equality_expression
/ 1


relational_expression
/ shift_expression relational_expression_ext

relational_expression_ext
/ LESS_CHAR relational_expression
/ GREATER_CHAR relational_expression
/ LE_OP relational_expression
/ GE_OP relational_expression
/ 1

shift_expression
/ additive_expression shift_expression_ext

shift_expression_ext
/ LEFT_OP shift_expression
/ RIGHT_OP shift_expression
/ 1

additive_expression
/ multiplicative_expression additive_expression_ext

additive_expression_ext
/ PLUS_CHAR additive_expression
/ MINUS_CHAR additive_expression
/ 1

multiplicative_expression
/ cast_expression multiplicative_expression_ext

multiplicative_expression_ext
/ MUL_CHAR multiplicative_expression
/ DIV_CHAR multiplicative_expression
/ MOD_CHAR multiplicative_expression
/ 1

cast_expression
/ unary_expression
/ OPEN_BRACKET type_name CLOSE_BRACKET cast_expression

unary_expression
/ postfix_expression
/ INC_OP unary_expression
/ DEC_OP unary_expression
/ SIZEOF unary_expression
/ SIZEOF OPEN_BRACKET type_name CLOSE_BRACKET
/ unary_operator cast_expression


postfix_expression
/ primary_expression postfix_expression_ext

postfix_expression_ext
/ postfix_expression_operators postfix_expression_ext
/ 1

postfix_expression_operators
/ OPEN_SQUARE expression CLOSE_SQUARE
/ OPEN_BRACKET CLOSE_BRACKET
/ OPEN_BRACKET argument_expression_list CLOSE_BRACKET
/ INC_OP
/ DEC_OP

primary_expression
/ IDENTIFIER
/ I_CONSTANT
/ F_CONSTANT
/ STRING_LITERAL
/ OPEN_BRACKET expression CLOSE_BRACKET

expression
/ assignment_expression expression_ext

expression_ext
/ COMMA_CHAR expression
/ 1

argument_expression_list
/ assignment_expression COMMA_CHAR argument_expression_list
/ assignment_expression


unary_operator
/ AND_CHAR
/ MUL_CHAR
/ PLUS_CHAR
/ MINUS_CHAR
/ TILDA_CHAR
/ EXCL_CHAR

type_name
/ specifier_qualifier_list abstract_declarator
/ specifier_qualifier_list

specifier_qualifier_list
/ type_specifier specifier_qualifier_list
/ type_specifier

abstract_declarator
/ pointer direct_abstract_declarator
/ pointer
/ direct_abstract_declarator


direct_abstract_declarator
/ direct_abstract_declarator_others direct_abstract_declarator_ext

direct_abstract_declarator_ext
/ direct_abstract_declarator_operators direct_abstract_declarator_ext
/ 1

direct_abstract_declarator_operators
/ direct_abstract_declarator_main
/ OPEN_BRACKET parameter_list CLOSE_BRACKET

direct_abstract_declarator_others
/ direct_abstract_declarator_main
/ OPEN_BRACKET abstract_declarator CLOSE_BRACKET

direct_abstract_declarator_main
/ OPEN_SQUARE CLOSE_SQUARE
/ OPEN_BRACKET CLOSE_BRACKET
/ OPEN_SQUARE constant_expression CLOSE_SQUARE


parameter_list
/ parameter_declaration COMMA_CHAR parameter_list
/ parameter_declaration


parameter_declaration
/ declaration_specifiers declarator
/ declaration_specifiers abstract_declarator
/ declaration_specifiers


identifier_list
/ IDENTIFIER COMMA_CHAR identifier_list
/ IDENTIFIER


assignment_operator
/ EQ_CHAR
/ MUL_ASSIGN
/ DIV_ASSIGN
/ MOD_ASSIGN
/ ADD_ASSIGN
/ SUB_ASSIGN
/ LEFT_ASSIGN
/ RIGHT_ASSIGN
/ AND_ASSIGN
/ XOR_ASSIGN
/ OR_ASSIGN

compound_statement
/ OPEN_CURLY CLOSE_CURLY
/ OPEN_CURLY block_item_list CLOSE_CURLY


block_item_list
/ block_item block_item_list
/ block_item


block_item
/ declaration
/ statement

declaration
/ declaration_specifiers init_declarator_list SEMICOLON_CHAR
/ declaration_specifiers SEMICOLON_CHAR


init_declarator_list
/ init_declarator COMMA_CHAR init_declarator_list
/ init_declarator


init_declarator
/ declarator EQ_CHAR initializer
/ declarator


initializer
/ OPEN_CURLY initializer_list CLOSE_CURLY
/ assignment_expression


initializer_list
/ initializer COMMA_CHAR initializer_list
/ initializer

statement
/ labeled_statement
/ compound_statement
/ expression_statement
/ selection_statement
/ iteration_statement
/ jump_statement


labeled_statement
/ IDENTIFIER COLON_CHAR statement
/ CASE constant_expression COLON_CHAR statement
/ DEFAULT COLON_CHAR statement


constant_expression
/ logical_or_expression


expression_statement
/ SEMICOLON_CHAR
/ expression SEMICOLON_CHAR


selection_statement
/ IF OPEN_BRACKET expression CLOSE_BRACKET statement ELSE statement
/ IF OPEN_BRACKET expression CLOSE_BRACKET statement
/ SWITCH OPEN_BRACKET expression CLOSE_BRACKET statement


iteration_statement
/ WHILE OPEN_BRACKET expression CLOSE_BRACKET statement
/ DO statement WHILE OPEN_BRACKET expression CLOSE_BRACKET SEMICOLON_CHAR
/ FOR OPEN_BRACKET expression_statement expression_statement CLOSE_BRACKET statement
/ FOR OPEN_BRACKET expression_statement expression_statement expression CLOSE_BRACKET statement
/ FOR OPEN_BRACKET declaration expression_statement CLOSE_BRACKET statement
/ FOR OPEN_BRACKET declaration expression_statement expression CLOSE_BRACKET statement


jump_statement
/ CONTINUE SEMICOLON_CHAR
/ BREAK SEMICOLON_CHAR
/ RETURN SEMICOLON_CHAR
/ RETURN expression SEMICOLON_CHAR